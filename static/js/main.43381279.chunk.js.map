{"version":3,"sources":["components/EditForm.js","components/ItemList.js","components/AddMenu.js","components/Userform.js","components/Menu.js","components/AddToCart.js","components/Cart.js","components/RestoApp.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["connect","state","items","itemToEdit","dispatch","updateItem","name","price","image","id","type","payload","props","useState","setUpdate","updateName","setUpdateName","updatePrice","setUpdatePrice","updateImg","setUpdateImg","Form","Group","className","Control","onChange","e","target","value","placeholder","Button","onClick","currentUser","cartItem","item","quantity","editBtn","delMenu","editItemId","setEditItem","setCopyItem","setDeleteMenu","setQuantity","show","setShow","src","alt","min","console","log","Modal","Header","Title","Body","Footer","addMenuItem","category","setAddedItem","setName","setPrice","setCategory","Image","setImage","handleLogIn","userName","password","setUserLogIn","setUserName","setPassword","byCategory","setByCategory","userLogIn","menuSet","setMenuSet","useEffect","temp","filter","map","AddMenu","Userform","addQty","addQuantity","subQty","subQuantity","deleteItem","delRow","setRemoveItem","itemQty","setItemQty","cart","total","clearBtn","setClearAll","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","users","status","reducer","action","usersCopy","index","findIndex","user","number","Number","totalPrice","itemsCopy","push","editItem","updatedItem","editedItem","addItem","uuidv4","categoty","newAddQtyPrice","addCart","newSubQtyPrice","subCart","itemToDel","splice","newTotalPrice","cartCopy","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43381279.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport {Button, Form} from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\nconst EditForm = (props) => {\r\n    let [updated, setUpdate] = useState(\"\")\r\n    let [updateName, setUpdateName] = useState(\"\")\r\n    let [updatePrice, setUpdatePrice] = useState(\"\")\r\n    let [updateImg, setUpdateImg] = useState(\"\")\r\n    \r\n    let updateItem = (e) => {\r\n        props.updateItem(updateName, updatePrice, updateImg, props.id)\r\n        setUpdate(e.target.value)\r\n    }\r\n    let handleUpdateName = (e) => {\r\n        setUpdateName(e.target.value)\r\n    }\r\n    let handleUpdatePrice = (e) => {\r\n        setUpdatePrice(e.target.value)\r\n    }\r\n    let handleUpdateImg = (e) => {\r\n        setUpdateImg(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <Form>\r\n            <Form.Group className=\"modalForm\">\r\n                <Form.Control\r\n                type=\"text\"\r\n                onChange={handleUpdateName}\r\n                placeholder={props.itemToEdit.name}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"modalForm\">\r\n                <Form.Control\r\n                type=\"text\"\r\n                onChange={handleUpdatePrice}\r\n                placeholder={props.itemToEdit.price}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"modalForm\">\r\n                <Form.Control\r\n                type=\"text\"\r\n                placeholder={props.itemToEdit.image}\r\n                onChange={handleUpdateImg}/>\r\n            </Form.Group>\r\n\r\n            <Button\r\n            className=\"updateBtn\"\r\n            onClick={updateItem}>\r\n                UPDATE\r\n            </Button>\r\n        </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        itemToEdit: state.itemToEdit\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateItem: (name, price, image, id) => dispatch ({type: 'UPDATED_ITEM', payload:{name, price, image, id} }),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RiPencilFill } from \"react-icons/ri\";\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport EditForm from \"./EditForm\";\r\nimport {TiDeleteOutline} from 'react-icons/ti'\r\n\r\nconst ItemList = (props) => {\r\n    let [editItem, setEditItem] = useState (\"\")\r\n    let [copyItem, setCopyItem] = useState(\"\")\r\n    let [deleteMenu, setDeleteMenu] = useState(\"\")\r\n    let [quantity, setQuantity] = useState(0)\r\n    let [show, setShow] = useState(false)\r\n\r\n    let editItemId\r\n    \r\n    let addItem = (e) => {\r\n        props.cartItem(props.item, quantity)\r\n            setCopyItem(e.target.value)\r\n    }\r\n    let changeQty = (e) => {\r\n            setQuantity(e.target.value)\r\n    }\r\n    let editBtn = (e) => {\r\n        editItemId = props.item.id\r\n        console.log(editItemId)\r\n        props.editBtn(props.item)\r\n        setShow (true)\r\n        setEditItem (e.target.value)\r\n    }\r\n    let delMenu = (e) =>{\r\n        props.delMenu(props.item)\r\n        setDeleteMenu(e.target.value)\r\n    }\r\n\r\n    let xEditBtn = () => {\r\n        setShow (false)\r\n    }\r\n    let {id, name, price, image} = props.item\r\n        return (\r\n            <>\r\n            <div>\r\n                <table className=\"itemTable\">\r\n                    <tr className=\"itemRow\">\r\n                        <td className=\"itemData\">\r\n                            <img src={image} alt={name}   />\r\n                            \r\n                            {name}\r\n\r\n                            <br/>\r\n\r\n                            {price}Php\r\n\r\n                            <br/>\r\n\r\n                            <input \r\n                            min=\"1\"\r\n                            className=\"inputQty\"\r\n                            type=\"number\"\r\n                            value={quantity}\r\n                            onChange={changeQty}/>\r\n\r\n                            <button \r\n                            className=\"addBtn\"\r\n                            onClick={addItem}>Add Item\r\n                            </button>\r\n\r\n                            <br/>\r\n\r\n                        { props.currentUser === \"admin\" ?\r\n                            <>\r\n                            <button \r\n                            className=\"editBtn\"\r\n                            onClick={editBtn}>\r\n                            <RiPencilFill/>\r\n                            </button>\r\n\r\n                            <button\r\n                            className=\"delMenu\"\r\n                            onClick={delMenu}>\r\n                                X\r\n                            </button>\r\n                            </>\r\n                            :null\r\n                        }\r\n\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n            <Modal show={show}\r\n            className=\"addMenuModal\">\r\n                <Modal.Header\r\n                className=\"modalHeader\">\r\n                    <Modal.Title>\r\n                        Edit Item\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body\r\n                className=\"modalBody\">\r\n                    \r\n                    <EditForm\r\n                    id={id} />\r\n\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer\r\n                className=\"modalFooter\">\r\n                    <Button onClick={xEditBtn}>X</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </>\r\n        )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        itemToEdit: state.itemToEdit,\r\n        currentUser: state.currentUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        cartItem: (item, quantity) => dispatch ({type:'CART_ITEM', payload:{item, quantity}}),\r\n\r\n        editBtn: (item) => dispatch ({type:'EDIT_BTN', payload:item}),\r\n\r\n        delMenu: (item) => dispatch ({type:'DEL_MENU', payload:item})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps ,mapDispatchToProps)(ItemList);","import { useState } from \"react\";\r\nimport {Button, Form} from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst AddMenuForm = (props) => {\r\n\r\n    let [addItem, setAddedItem] = useState (\"\")\r\n    let [name, setName] = useState (\"\")\r\n    let [price, setPrice] = useState (\"\")\r\n    let [category, setCategory] = useState (\"\")\r\n    let [Image, setImage] = useState (\"\")\r\n\r\n    let changeName = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n    let changePrice = (e) => {\r\n        setPrice(e.target.value)\r\n    }\r\n    let changeCategory = (e) => {\r\n        setCategory(e.target.value)\r\n    }\r\n    let changeImg = (e) => {\r\n        setImage(e.target.value)\r\n    }\r\n\r\n    let toAddItem = (e) => {\r\n        props.addMenuItem(name, price, category, Image)\r\n        setAddedItem (e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Form >\r\n            <Form.Group className=\"modalForm\">\r\n                <Form.Control\r\n                type=\"text\"\r\n                onChange={changeName}\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"modalForm\">\r\n                <Form.Control\r\n                type=\"text\"\r\n                onChange={changePrice}\r\n                placeholder=\"Enter Price\"\r\n                value={price}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"modalForm\">\r\n                <Form.Control\r\n                type=\"text\"\r\n                onChange={changeCategory}\r\n                placeholder=\"Choose  Category\"\r\n                value={category}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"modalForm\">\r\n                <Form.Control\r\n                type=\"text\"\r\n                onChange={changeImg}\r\n                placeholder=\"https://via.placeholder.com/150\"\r\n                value={Image}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Button\r\n            className=\"addBtn\" \r\n            onClick={toAddItem}>\r\n                ADD\r\n            </Button>\r\n        </Form>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.items\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMenuItem: (name, price, category, image) => dispatch ({type:'ADD_MENU', payload:{name, price, category, image}})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMenuForm);","import { useState } from 'react';\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\n\r\nconst UserForm = (props) => {\r\n    let [UserLogIn, setUserLogIn] = useState(\"\")\r\n    let [userName, setUserName] = useState(\"\")\r\n    let [password, setPassword] = useState(\"\")\r\n    \r\n\r\n    let handleLogIn = (e) => {\r\n        props.handleLogIn(userName, password)\r\n        setUserLogIn(e.target.value)\r\n    }\r\n    let handleUserName = (e) => {\r\n        setUserName(e.target.value)\r\n    }\r\n    let handlePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Form>\r\n            <Form.Group>\r\n                UserName :<Form.Control\r\n                type=\"text\"\r\n                onChange={handleUserName}/>\r\n            </Form.Group>\r\n            \r\n            <Form.Group>\r\n                Password :<Form.Control\r\n                type=\"password\"\r\n                onChange={handlePassword}/>\r\n            </Form.Group>\r\n\r\n            <Button\r\n            className=\"LogInBtn\"\r\n            onClick={handleLogIn}>\r\n                Log In\r\n            </Button>\r\n        </Form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleLogIn: (userName, password) => dispatch ({type:'LOG_IN', payload: {userName, password}})\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(UserForm);","import { useEffect, useState} from \"react\";\r\nimport ItemList from \"./ItemList\";\r\nimport { RiMenuAddFill, RiPencilFill } from \"react-icons/ri\";\r\nimport { connect } from \"react-redux\";\r\nimport  AddMenuForm  from \"./AddMenu\";\r\nimport {Modal, Button} from \"react-bootstrap\"\r\nimport Userform from \"./Userform\";\r\n\r\n\r\nconst Menu = (props) => {\r\n    let [byCategory, setByCategory] = useState(\"ALL\")\r\n    let [show, setShow] = useState(false)\r\n    let [userLogIn, setUserLogIn] = useState(false)\r\n    let [menuSet, setMenuSet] = useState (props.items)\r\n    \r\n    let changeSetMenu = (e) => {\r\n            setByCategory(e.target.value)\r\n        }\r\n    let addMenuBtn = () => {\r\n        setShow (true)\r\n    }\r\n    let xAddMenuBtn = () => {\r\n        setShow (false)\r\n    }\r\n    let handleUser = () => {\r\n        setUserLogIn(true)\r\n    }\r\n    let handleSubmit = () => {\r\n        setUserLogIn(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let temp = props.items\r\n        if (byCategory !== \"ALL\"){\r\n            temp = props.items.filter(item => item.category === byCategory)\r\n        }\r\n        setMenuSet(temp)\r\n    },[byCategory, props.items])\r\n\r\n    console.log(menuSet)\r\n        return (\r\n            <>\r\n            <div>\r\n                <div className=\"user\">\r\n                    <button\r\n                    onClick={handleUser}>\r\n                        Hi! {props.currentUser}\r\n                    </button>\r\n                </div>\r\n                    <h1 className=\"restoApp\">RESTO APP</h1>\r\n                    <br/>\r\n\r\n                    <select\r\n                    className=\"selector\"\r\n                    value = {byCategory}\r\n                    onChange={changeSetMenu}>\r\n\r\n                        <option>ALL</option>\r\n                        <option>Food</option>\r\n                        <option>Drink</option>\r\n\r\n                    </select>\r\n\r\n                    <br/>\r\n                    <br/>\r\n\r\n\r\n                    <td className=\"menuSet\">\r\n                        {menuSet.map(item => \r\n                        <ItemList\r\n                        cartItem={props.cartItem} \r\n                        item={item}/>)}\r\n                    </td>\r\n                    \r\n\r\n                    {props.currentUser === \"admin\" ?\r\n                    <Button \r\n                    className=\"menuBtn\" \r\n                    onClick={addMenuBtn}>\r\n                        <RiMenuAddFill/>\r\n                    </Button>\r\n\r\n                    : null\r\n                    }\r\n            </div>\r\n\r\n\r\n            <Modal show={show}>\r\n                <Modal.Header\r\n                className=\"modalHeader\">\r\n                    <Modal.Title>\r\n                        ADD NEW ITEM\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body\r\n                className=\"modalBody\">\r\n                    <AddMenuForm/>\r\n                </Modal.Body>\r\n                <Modal.Footer\r\n                className=\"modalFooter\">\r\n                    <Button onClick={xAddMenuBtn}>X</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            \r\n            <Modal show={userLogIn}>\r\n                <Modal.Header>\r\n                    Log In\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Userform/>\r\n                </Modal.Body>\r\n                \r\n                <Modal.Footer>\r\n                    <Button onClick={handleSubmit}>X</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n            </>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        itemToEdit: state.itemToEdit,\r\n        currentUser: state.currentUser\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Menu);","import { useState } from \"react\";\r\nimport {BsTrash} from 'react-icons/bs'\r\nimport { connect, Connect } from 'react-redux'\r\n\r\nconst AddToCart = (props) => {\r\n    let [removeItem, setRemoveItem] = useState (\"\")\r\n    let [itemQty, setItemQty] = useState (0)\r\n\r\n    let clickDel = (e) => {\r\n        props.deleteItem(props.item)\r\n            setRemoveItem(e.target.value)\r\n    }\r\n    let addItem = () => {\r\n        props.addQty(props.item)\r\n        setItemQty(itemQty + 1)\r\n        console.log(props.item)\r\n    }\r\n    let subItem = () => {\r\n        props.subQty(props.item)\r\n        setItemQty(itemQty - 1)\r\n    }\r\n        let {name, price, quantity} = props.item\r\n        return(\r\n            <div>\r\n                <div className=\"cartMenu\">\r\n                    <div className=\"itemName\">\r\n                        <h2>{name}</h2>\r\n                    </div>\r\n                    \r\n                    <div className=\"itemQty\">\r\n\r\n                    <button\r\n                    min=\"0\"\r\n                    className=\"subQty\"\r\n                    onClick={subItem}> - </button>\r\n\r\n                    {quantity}\r\n\r\n                    <button\r\n                    className=\"addQty\"\r\n                    onClick={addItem}> + </button>\r\n                    </div>\r\n                    \r\n                    <div className=\"itemPrice\">x{price}</div>\r\n\r\n                    <button \r\n                    className=\"delBtn\" \r\n                    onClick={clickDel}>\r\n                        <BsTrash/> \r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addQty: (addQuantity) => dispatch ({type:'ADD_QTY', payload:addQuantity}),\r\n\r\n        subQty: (subQuantity) => dispatch ({type:'SUB_QTY', payload:subQuantity}),\r\n\r\n        deleteItem: (delRow) => dispatch ({type:'DEL_ITEM', payload:delRow}),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddToCart);","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddToCart from \"./AddToCart\";\r\n\r\n\r\nconst Cart = (props) => {\r\n    let [clearAll, setClearAll] = useState (\"\")\r\n    let clearAllBtn = (e) => {\r\n        props.clearBtn()\r\n        setClearAll (e.target.value)\r\n    }\r\n    return(\r\n        <div>\r\n            \r\n            <button \r\n            className=\"clearBtn\" \r\n            onClick={clearAllBtn}>Clear Cart</button>\r\n\r\n            <br/>\r\n\r\n            {props.cart.map(item => \r\n                \r\n                <AddToCart \r\n                deleteItem={props.deleteItem} \r\n                addQty={props.addQty}\r\n                subQty={props.subQty}\r\n                item ={item}\r\n            \r\n            />)}\r\n\r\n            <hr/>\r\n\r\n            <div className=\"price\">\r\n                Total Amount:\r\n                <h1 className=\"totalAmt\">\r\n                    {props.total}\r\n                </h1>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart,\r\n        total: state.total\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearBtn: () => dispatch ({type: \"CLEAR_ALL\"})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import { useState } from \"react\";\r\nimport Menu from \"./Menu\"\r\nimport Cart from \"./Cart\";\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst RestoApp = (props) => {\r\n    return (\r\n        <div>\r\n    \r\n            <table className=\"restoTable\">\r\n                <tr className=\"restoRow\">\r\n                    <Menu />\r\n                </tr>            \r\n            </table>\r\n                            \r\n\r\n                <br/>\r\n            <h1 className=\"cartName\">CART ITEMS</h1>\r\n            <div className=\"cartBox\">\r\n                < Cart />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        cart: state.cart,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RestoApp);","import './App.css';\r\nimport RestoApp from './components/RestoApp';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n      <div className=\"App\">\r\n        <RestoApp />\r\n      </div>\r\n    \r\n  )\r\n}\r\n    \r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { v4 as uuidv4 } from 'uuid'\r\n\r\nconst initialState = {\r\n        users: [\r\n            {name:\"client\",password:\"123\"},{name:\"admin\",password:\"abc\"}],\r\n        currentUser:\"admin\",\r\n        items: [{\r\n            id: 1,\r\n            name: \"Burger\",\r\n            price: 50,\r\n            category: \"Food\",\r\n            status: 'active',\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046784.svg\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Pizza\",\r\n            price: 100,\r\n            category: \"Food\",\r\n            status: 'active',\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046771.svg\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Fries\",\r\n            price: 25,\r\n            category: \"Food\",\r\n            status: 'active',\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046786.svg\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Coffee\",\r\n            price: 35,\r\n            category: \"Drink\",\r\n            status: 'active',\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046785.svg\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Iced Tea\",\r\n            price: 45,\r\n            category: \"Drink\",\r\n            status: 'active',\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046782.svg\"\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Hot Tea\",\r\n            price: 45,\r\n            category: \"Drink\",\r\n            status: 'active',\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046792.svg\"\r\n        }\r\n        ],\r\n        cart: [],\r\n        total: 0,\r\n        itemToEdit: null,\r\n    }\r\n\r\n    const reducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case \"LOG_IN\" : {\r\n                let usersCopy = [...state.users]\r\n                let index = usersCopy.findIndex((user) => user.name === action.payload.userName && user.password === action.payload.password)\r\n                if (index !== 1) {\r\n                    return {\r\n                        ...state,\r\n                        currentUser: action.payload.userName\r\n                    }\r\n                }\r\n            }\r\n\r\n            case \"CART_ITEM\" : {\r\n                let number = Number (action.payload.quantity)\r\n                let totalPrice = state.total + (action.payload.item.price * number)\r\n                let itemsCopy = [...state.cart]\r\n                let index = itemsCopy.findIndex((item) => item.name === action.payload.item.name)\r\n                if (index === -1){\r\n                    action.payload.item.quantity = number;\r\n                    itemsCopy.push(action.payload.item)\r\n                } else {\r\n                    itemsCopy[index].quantity += number;\r\n                }\r\n                return {\r\n                    ...state,\r\n                    cart: itemsCopy,\r\n                    total: totalPrice\r\n                }\r\n            }\r\n            case \"EDIT_BTN\" : {\r\n                let editItem = [...state.items]\r\n                let index = editItem.findIndex((item) => item.id === action.payload.id)\r\n                if (index !== -1){\r\n                    console.log(editItem[index])\r\n                    return {\r\n                        ...state,\r\n                        itemToEdit: editItem[index],\r\n                    }\r\n                }   \r\n            }\r\n            case \"UPDATED_ITEM\" : {\r\n                console.log(action.payload)\r\n                let updatedItem = {\r\n                    id: action.payload.id,\r\n                    name: action.payload.name,\r\n                    price: action.payload.price*1,\r\n                    image: action.payload.image\r\n                }\r\n                let editedItem = [...state.items]\r\n                let index = editedItem.findIndex((item) => item.id === action.payload.id)\r\n                editedItem[index] = updatedItem\r\n                if (index !== -1 ) {\r\n                    return  {\r\n                        ...state,\r\n                        items: editedItem\r\n                    }\r\n                }\r\n                \r\n            }\r\n         \r\n            case \"ADD_MENU\" : {\r\n                let addItem = {\r\n                    id: uuidv4(),\r\n                    name: action.payload.name,\r\n                    price: action.payload.price*1,\r\n                    categoty: action.payload.category,\r\n                    image: action.payload.image\r\n                }\r\n                let itemsCopy = [...state.items, addItem]\r\n                console.log(addItem)\r\n                return {\r\n                    ...state,\r\n                    items: itemsCopy\r\n                }\r\n                \r\n            }\r\n            case \"CLEAR_ALL\" : {\r\n                return {\r\n                    ...state,\r\n                    cart: [],\r\n                    total: 0\r\n                }\r\n            }\r\n            case \"ADD_QTY\" : {\r\n                let newAddQtyPrice = state.total + action.payload.price\r\n                let addCart = [...state.cart]\r\n                let index = state.cart.findIndex((item) => item.id === action.payload.id)\r\n                if (index !== -1)\r\n                    addCart[index].quantity++\r\n                    return {\r\n                    ...state,\r\n                    cart: addCart,\r\n                    total: newAddQtyPrice,\r\n                }\r\n            }\r\n            case \"SUB_QTY\" : {\r\n                let newSubQtyPrice = state.total - action.payload.price\r\n                let subCart = [...state.cart]\r\n                let index = state.cart.findIndex((item) => item.id === action.payload.id)\r\n                if (index !== -1)\r\n                subCart[index].quantity--\r\n                return {\r\n                    ...state,\r\n                    cart: subCart,\r\n                    total: newSubQtyPrice\r\n                }\r\n            }\r\n            case \"DEL_MENU\" : {\r\n                let itemToDel = [...state.items] \r\n                let index = state.items.findIndex((item) =>item.id === action.payload.id)\r\n                if (index !== -1 )\r\n                itemToDel.splice(index, 1)\r\n                return {\r\n                    ...state,\r\n                    items: itemToDel\r\n                }\r\n            }\r\n            case \"DEL_ITEM\" : {\r\n                let newTotalPrice = state.total - (action.payload.price * action.payload.quantity)\r\n                let cartCopy = [...state.cart] \r\n                let index = state.cart.findIndex((item) =>item.id === action.payload.id)\r\n                if (index !== -1 )\r\n                cartCopy.splice(index, 1)\r\n                return {\r\n                    ...state,\r\n                    cart: cartCopy,\r\n                    total: newTotalPrice\r\n                }\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n\r\n    export default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}